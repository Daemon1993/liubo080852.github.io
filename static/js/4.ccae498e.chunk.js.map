{"version":3,"sources":["features/task_manage/ManageHome.js"],"names":["marked","require","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","str","lang","hljs","getLanguage","value","__","highlightAuto","ManageHome","props","pasteFileAction","e","cbd","clipboardData","ua","window","navigator","userAgent","items","length","kind","types","match","Number","i","item","blob","getAsFile","size","name","indexOf","console","log","handleTextareaChange","evt","setState","textareaValue","target","leftTRScorll","event","scrollHeight","clientHeight","scrollTop","right_show","scaleSize","left_input","state","axios","get","then","res","catch","error","result","this","className","ref","onScroll","onPasteCapture","onChange","dangerouslySetInnerHTML","__html","React","Component"],"mappings":"4QAqBIA,EAASC,EAAQ,KACrBD,EAAOE,WAAW,CACdC,SAAU,IAAIH,EAAOI,SACrBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,UAAW,SAAUC,EAAKC,GACtB,GAAIA,GAAQC,IAAKC,YAAYF,GACzB,IACI,OAAOC,IAAKH,UAAUE,EAAMD,GAAKI,MACnC,MAAOC,IAIb,IACI,OAAOH,IAAKI,cAAcN,GAAKI,MACjC,MAAOC,IAGT,MAAO,M,IAIME,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAmCVC,gBAAgB,SAACC,GACb,IAAIC,EAAMD,EAAEE,cACRC,EAAKC,OAAOC,UAAUC,UAG1B,GAAMN,EAAEE,eAAiBF,EAAEE,cAAcK,OAMzC,KAAIN,EAAIM,OAA8B,IAArBN,EAAIM,MAAMC,QAAsC,WAAtBP,EAAIM,MAAM,GAAGE,MAA2C,SAAtBR,EAAIM,MAAM,GAAGE,MACtFR,EAAIS,OAA8B,IAArBT,EAAIS,MAAMF,QAAiC,eAAjBP,EAAIS,MAAM,IAAwC,UAAjBT,EAAIS,MAAM,IAClFP,EAAGQ,MAAM,eAAiBC,OAAOT,EAAGQ,MAAM,oBAAoB,IAAM,IAIxE,IAAK,IAAIE,EAAI,EAAGA,EAAIZ,EAAIM,MAAMC,OAAQK,IAAK,CACvC,IAAIC,EAAOb,EAAIM,MAAMM,GACrB,GAAiB,QAAbC,EAAKL,KAAgB,CACrB,IAAIM,EAAOD,EAAKE,YAChB,GAAkB,IAAdD,EAAKE,KACL,QAE4B,GAA7BF,EAAKG,KAAKC,QAAQ,UACjBC,QAAQC,IAAIN,GAEhB,aArBJK,QAAQC,IAAI,qDA1CD,EAoEnBC,qBAAuB,SAACC,GACpB,EAAKC,SAAS,CACVC,cAAeF,EAAIG,OAAOhC,SAtEf,EA0EnBiC,aAAe,SAACC,GAEZ,GAAIA,EAAMF,OAAOG,aAAeD,EAAMF,OAAOI,cAAgBF,EAAMF,OAAOK,UAGtE,OAFAX,QAAQC,IAAI,qBACZ,EAAKW,WAAWD,UAAY,EAAKC,WAAWH,aAAe,EAAKG,WAAWF,cAG/E,IAEIG,EAFc,EAAKD,WAAWH,aACb,EAAKK,WAAWL,aAGjCI,EAAY,IACZA,GAAwB,IAG5B,EAAKD,WAAWD,UAAYH,EAAMF,OAAOK,UAAYE,GAvFrD,EAAKE,MAAQ,CACTV,cAAe,IAHJ,E,0CAOnB,WAAU,IAAD,OACLW,IAAMC,IAAI,aAAaC,MAAK,SAAAC,GAAMnB,QAAQC,IAAIkB,MAC7CC,OAAM,SAAAC,GAAK,OAAErB,QAAQC,IAAIoB,MAE1B,IAAIC,EAASjE,EAAOkE,KAAKR,MAAMV,eAC/B,OACI,sBAAKmB,UAAU,OAAf,UACI,qBAAKA,UAAU,MAAf,SACI,iEAEJ,sBAAKA,UAAU,UAAf,UACI,0BACIC,IAAK,SAACA,GAAU,EAAKX,WAAaW,GAClCC,SAAUH,KAAKhB,aACfoB,eAAgBJ,KAAK5C,gBACrB6C,UAAU,aAAalD,MAAOiD,KAAKR,MAAMV,cAAeuB,SAAUL,KAAKrB,uBAE3E,qBAAKuB,IAAK,SAACA,GAAU,EAAKb,WAAaa,GAAOD,UAAU,aAAaK,wBAAyB,CAAEC,OAAQR,e,GA1BpFS,IAAMC,Y","file":"static/js/4.ccae498e.chunk.js","sourcesContent":["/***\r\n * 编辑器功能\r\n */\r\n\r\nimport React from \"react\";\r\nimport './manage.scss';\r\nimport './markdown10.scss';\r\n\r\n\r\nimport hljs from \"highlight.js\";\r\nimport 'highlight.js/styles/atom-one-dark.css';\r\nimport axios from \"axios\";\r\n\r\n \r\n// var network = axios.create({\r\n//     baseURL: 'https:www.baidu.com',\r\n//     timeout: 1000,\r\n//     headers: {}\r\n//   });\r\n\r\n\r\nvar marked = require('marked');\r\nmarked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: true,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n    highlight: function (str, lang) {\r\n        if (lang && hljs.getLanguage(lang)) {\r\n            try {\r\n                return hljs.highlight(lang, str).value;\r\n            } catch (__) {\r\n            }\r\n        }\r\n\r\n        try {\r\n            return hljs.highlightAuto(str).value;\r\n        } catch (__) {\r\n        }\r\n\r\n        return ''; // use e\r\n    }\r\n});\r\n\r\nexport default class ManageHome extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            textareaValue: \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        axios.get('/cityjson').then(res=>{console.log(res)})\r\n        .catch(error=>console.log(error))\r\n\r\n        var result = marked(this.state.textareaValue); // result is a String\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"top\">\r\n                    <h1>Jump 编辑文章</h1>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <textarea\r\n                        ref={(ref) => { this.left_input = ref }}\r\n                        onScroll={this.leftTRScorll}\r\n                        onPasteCapture={this.pasteFileAction}\r\n                        className=\"left_input\" value={this.state.textareaValue} onChange={this.handleTextareaChange} />\r\n\r\n                    <div ref={(ref) => { this.right_show = ref }} className=\"right_show\" dangerouslySetInnerHTML={{ __html: result }} >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 粘贴图片/文件\r\n     * @param {*} evt \r\n     */\r\n    pasteFileAction=(e)=>{\r\n        var cbd = e.clipboardData;\r\n        var ua = window.navigator.userAgent;\r\n\r\n        \r\n        if (!(e.clipboardData && e.clipboardData.items)) {\r\n            console.log(\"无法获取粘贴内容\")\r\n            return;\r\n        }\r\n\r\n        // Mac平台下Chrome49版本以下 复制Finder中的文件的Bug Hack掉\r\n        if (cbd.items && cbd.items.length === 2 && cbd.items[0].kind === \"string\" && cbd.items[1].kind === \"file\" &&\r\n            cbd.types && cbd.types.length === 2 && cbd.types[0] === \"text/plain\" && cbd.types[1] === \"Files\" &&\r\n            ua.match(/Macintosh/i) && Number(ua.match(/Chrome\\/(\\d{2})/i)[1]) < 49) {\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < cbd.items.length; i++) {\r\n            var item = cbd.items[i];\r\n            if (item.kind == \"file\") {\r\n                var blob = item.getAsFile();\r\n                if (blob.size === 0) {\r\n                    return;\r\n                }\r\n                if(blob.name.indexOf(\"image\")!=-1){\r\n                    console.log(blob);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextareaChange = (evt) => {\r\n        this.setState({\r\n            textareaValue: evt.target.value\r\n        })\r\n    }\r\n\r\n    leftTRScorll = (event) => {\r\n\r\n        if (event.target.scrollHeight - event.target.clientHeight == event.target.scrollTop) {\r\n            console.log('底部');\r\n            this.right_show.scrollTop = this.right_show.scrollHeight - this.right_show.clientHeight;\r\n            return;\r\n        }\r\n        let mdDivHeight = this.right_show.scrollHeight;\r\n        let textAreaHeight = this.left_input.scrollHeight;\r\n        let scaleSize = mdDivHeight / textAreaHeight;\r\n\r\n        if (scaleSize > 1) {\r\n            scaleSize = scaleSize * 0.9;\r\n        }\r\n\r\n        this.right_show.scrollTop = event.target.scrollTop * scaleSize;\r\n    }\r\n\r\n}"],"sourceRoot":""}