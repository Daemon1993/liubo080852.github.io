{"version":3,"sources":["features/task_manage/login/login.scss","features/task_manage/login/Login.js"],"names":["module","exports","Login","props","login2Server","console","log","state","username","pwd","CryptoJS","MD5","toString","Bmob","User","login","then","res","secret0","secret1","sercert1","enc","Base64","parse","Utf8","substring","length","originalText","AES","decrypt","ttt","user","sessionToken","dispatch","actionLoginUser","history","replace","catch","err","usernameInput","evt","setState","target","value","pwdInput","location","this","reset_k1","initialize","className","styles","main","top_tag","login_main","onChange","size","placeholder","prefix","Password","iconRender","visible","onClick","bt_sub","type","React","Component","LoginConnect","connect","login_reducer","login_user"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,KAAO,oDAAoD,QAAU,uDAAuD,WAAa,0DAA0D,IAAM,mDAAmD,OAAS,wD,8NCoBjRC,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAqDVC,aAAe,WACXC,QAAQC,IAAI,EAAKC,OAEjB,IAAIC,EAAW,EAAKD,MAAMC,SACtBC,EAAMC,IAASC,IAAI,EAAKJ,MAAME,KAAKG,WAGvCC,IAAKC,KAAKC,MAAMP,EAAUC,GAAKO,MAAK,SAAAC,GAChCZ,QAAQC,IAAIW,GACZ,IAAIC,EAAUD,EAAIC,QACdC,EAAUF,EAAIG,SAElBD,GADAA,EAAUT,IAASW,IAAIC,OAAOC,MAAMJ,GAASP,SAASF,IAASW,IAAIG,OACjDC,UAAU,EAAGN,EAAQO,OAAS,GAEhD,IACIC,EADQjB,IAASkB,IAAIC,QAAQX,EAASC,GACjBP,SAASF,IAASW,IAAIG,MAC3CM,EAAMH,EAAaF,UAAU,EAAGE,EAAaD,OAAS,GAGtDK,EAAO,CACPvB,SAAUS,EAAIT,SACdwB,aAAcf,EAAIe,aAClBF,IAAKA,EACLf,MAAO,GAGXV,QAAQC,IAAIyB,GAEZ,EAAK5B,MAAM8B,SAASC,YAAgBH,IAEpC,EAAK5B,MAAMgC,QAAQC,QAAQ,cAE5BC,OAAM,SAAAC,GACLjC,QAAQC,IAAIgC,OAvFD,EA0FnBC,cAAgB,SAACC,GACb,EAAKC,SAAS,CACVjC,SAAUgC,EAAIE,OAAOC,SA5FV,EA+FnBC,SAAW,SAACJ,GACR,EAAKC,SAAS,CACVhC,IAAK+B,EAAIE,OAAOC,SA9FpBtC,QAAQC,IAAI,EAAKH,MAAM0C,UAEvB,EAAKtC,MAAQ,CACTC,SAAU,GACVC,IAAK,IAPM,E,qDAqBnB,WACIJ,QAAQC,IAAIwC,KAAK3C,OAGjB,IAAI4C,EAAWrC,IAASW,IAAIC,OAAOC,MA9B7B,oBA8B4CX,SAASF,IAASW,IAAIG,MACxEuB,EAAWA,EAAStB,UAAU,EAAGsB,EAASrB,OAAS,GAEnDb,IAAKmC,WAAW,mBAAoBD,K,oBAGxC,WACI,OACI,sBAAKE,UAAWC,IAAOC,KAAvB,UACI,sBAAKF,UAAWC,IAAOE,QAAvB,mBAAuCN,KAAK3C,MAAM4B,KAAKhB,SACvD,sBAAKkC,UAAWC,IAAOG,WAAvB,UACI,cAAC,IAAD,CAAOV,MAAOG,KAAKvC,MAAMC,SAAU8C,SAAUR,KAAKP,cAAegB,KAAK,QAAQC,YAAY,WAAWC,OAAQ,cAAC,IAAD,MAE7G,cAAC,IAAMC,SAAP,CACIJ,SAAUR,KAAKF,SACfD,MAAOG,KAAKvC,MAAME,IAClBwC,UAAWC,IAAOzC,IAClB8C,KAAK,QACLC,YAAY,WACZG,WAAY,SAAAC,GAAO,OAAKA,EAAU,cAAC,IAAD,IAAiB,cAAC,IAAD,OAGvD,cAAC,IAAD,CAAQC,QAASf,KAAK1C,aAAc6C,UAAWC,IAAOY,OAAQC,KAAK,UAAnE,oC,GAjDAC,IAAMC,WAgH1B,IAAMC,EAAeC,aARrB,SAAwB5D,GAGpB,OAFAF,QAAQC,IAAI,mBAEL,CACHyB,KAAMxB,EAAM6D,cAAcC,cAIbF,CAAwBjE,GAG7BgE","file":"static/js/7.70380445.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"src-features-task_manage-login-login__main--36sD7\",\"top_tag\":\"src-features-task_manage-login-login__top_tag--3d8ZY\",\"login_main\":\"src-features-task_manage-login-login__login_main--1EOt8\",\"pwd\":\"src-features-task_manage-login-login__pwd--ucJLl\",\"bt_sub\":\"src-features-task_manage-login-login__bt_sub--3nGOM\"};","import React from \"react\";\r\n\r\nimport { Input, Button, Dropdown } from 'antd';\r\nimport { UserOutlined, EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport styles from './login.scss';\r\n\r\n \r\nimport { connect } from \"react-redux\";\r\nimport Bmob from \"hydrogen-js-sdk\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nimport { actionLoginUser } from './login_reducer';\r\n \r\n\r\n\r\nlet reset_k = \"NDUxOTkzMTkzNw==\";\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        console.log(this.props.location)\r\n\r\n        this.state = {\r\n            username: '',\r\n            pwd: \"\"\r\n        }\r\n        \r\n    }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n    //     if (nextProps.user.login==1) {\r\n    //         console.log(\"登录状态成功\")\r\n    //         nextProps.history.replace(\"/manage\");\r\n    //     }\r\n    //     return null; // 这里一定要return null\r\n    // }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        // 初始化 SDK版本 2.0.0 以下保留之前的初始化方法\r\n\r\n        let reset_k1 = CryptoJS.enc.Base64.parse(reset_k).toString(CryptoJS.enc.Utf8);\r\n        reset_k1 = reset_k1.substring(2, reset_k1.length - 2)\r\n\r\n        Bmob.initialize(\"c5bfe65ab37d31cd\", reset_k1);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.main}>\r\n                <div className={styles.top_tag}>Login {this.props.user.login}</div>\r\n                <div className={styles.login_main}>\r\n                    <Input value={this.state.username} onChange={this.usernameInput} size=\"large\" placeholder=\"username\" prefix={<UserOutlined />} />\r\n\r\n                    <Input.Password\r\n                        onChange={this.pwdInput}\r\n                        value={this.state.pwd}\r\n                        className={styles.pwd}\r\n                        size=\"large\"\r\n                        placeholder=\"password\"\r\n                        iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                    />\r\n\r\n                    <Button onClick={this.login2Server} className={styles.bt_sub} type=\"primary\">登录</Button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    login2Server = () => {\r\n        console.log(this.state)\r\n\r\n        let username = this.state.username;\r\n        let pwd = CryptoJS.MD5(this.state.pwd).toString();\r\n\r\n        // 项目其他页面使用跟小程序一样使用Bmob对象即可，例如：\r\n        Bmob.User.login(username, pwd).then(res => {\r\n            console.log(res)\r\n            let secret0 = res.secret0;\r\n            let secret1 = res.sercert1;\r\n            secret1 = CryptoJS.enc.Base64.parse(secret1).toString(CryptoJS.enc.Utf8);\r\n            secret1 = secret1.substring(0, secret1.length - 3)\r\n\r\n            let bytes = CryptoJS.AES.decrypt(secret0, secret1);\r\n            let originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n            let ttt = originalText.substring(1, originalText.length - 1);\r\n\r\n\r\n            let user = {\r\n                username: res.username,\r\n                sessionToken: res.sessionToken,\r\n                ttt: ttt,\r\n                login: 1\r\n            }\r\n\r\n            console.log(user)\r\n\r\n            this.props.dispatch(actionLoginUser(user))\r\n\r\n            this.props.history.replace(\"/manage\");\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n    usernameInput = (evt) => {\r\n        this.setState({\r\n            username: evt.target.value\r\n        })\r\n    }\r\n    pwdInput = (evt) => {\r\n        this.setState({\r\n            pwd: evt.target.value\r\n        })\r\n    }\r\n}\r\n\r\nfunction mapState2Props(state) {\r\n    console.log(\"mapState2Props \")\r\n\r\n    return {\r\n        user: state.login_reducer.login_user\r\n    }\r\n}\r\n\r\nconst LoginConnect = connect(mapState2Props)(Login)\r\n \r\n\r\nexport default  LoginConnect"],"sourceRoot":""}