{"version":3,"sources":["features/task_manage/ManageHome.js"],"names":["marked","require","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","ManageHome","props","handleTextareaChange","evt","setState","textareaValue","target","value","leftTRScorll","event","scrollHeight","clientHeight","scrollTop","console","log","right_show","scaleSize","left_input","state","result","this","className","ref","onScroll","onChange","dangerouslySetInnerHTML","__html","React","Component"],"mappings":"yQAUIA,EAASC,EAAQ,IACrBD,EAAOE,WAAW,CACdC,SAAU,IAAIH,EAAOI,SACrBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,I,IAGIC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA6BVC,qBAAuB,SAACC,GACpB,EAAKC,SAAS,CACVC,cAAeF,EAAIG,OAAOC,SAhCf,EAoCnBC,aAAe,SAACC,GAIZ,GAAIA,EAAMH,OAAOI,aAAeD,EAAMH,OAAOK,cAAgBF,EAAMH,OAAOM,UAGtE,OAFAC,QAAQC,IAAI,qBACZ,EAAKC,WAAWH,UAAY,EAAKG,WAAWL,aAAe,EAAKK,WAAWJ,cAG/E,IAEIK,EAFc,EAAKD,WAAWL,aACb,EAAKO,WAAWP,aAGjCM,EAAY,IACZA,GAAwB,IAG5B,EAAKD,WAAWH,UAAYH,EAAMH,OAAOM,UAAYI,GAnDrD,EAAKE,MAAQ,CACTb,cAAe,IAHJ,E,0CAOnB,WAAU,IAAD,OAGDc,EAAS/B,EAAOgC,KAAKF,MAAMb,eAE/B,OACI,sBAAKgB,UAAU,OAAf,UACI,+DACA,sBAAKA,UAAU,UAAf,UAEI,0BACIC,IAAK,SAACA,GAAU,EAAKL,WAAaK,GAClCC,SAAUH,KAAKZ,aACfa,UAAU,aAAad,MAAOa,KAAKF,MAAMb,cAAemB,SAAUJ,KAAKlB,uBAG3E,qBAAKoB,IAAK,SAACA,GAAU,EAAKP,WAAaO,GAAOD,UAAU,aAAaI,wBAAyB,CAAEC,OAAQP,e,GAzBpFQ,IAAMC","file":"static/js/3.a0cda27a.chunk.js","sourcesContent":["/***\r\n * 编辑器功能\r\n */\r\n\r\nimport React from \"react\";\r\nimport './manage.scss';\r\nimport './markdown10.scss';\r\n\r\n\r\n\r\nvar marked = require('marked');\r\nmarked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: true,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n});\r\n\r\nexport default class ManageHome extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            textareaValue: \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        var result = marked(this.state.textareaValue); // result is a String\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <h1>Jump 编辑文章</h1>\r\n                <div className=\"content\">\r\n\r\n                    <textarea\r\n                        ref={(ref) => { this.left_input = ref }}\r\n                        onScroll={this.leftTRScorll}\r\n                        className=\"left_input\" value={this.state.textareaValue} onChange={this.handleTextareaChange} />\r\n\r\n\r\n                    <div ref={(ref) => { this.right_show = ref }} className=\"right_show\" dangerouslySetInnerHTML={{ __html: result }}></div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    handleTextareaChange = (evt) => {\r\n        this.setState({\r\n            textareaValue: evt.target.value\r\n        })\r\n    }\r\n\r\n    leftTRScorll = (event) => {\r\n\r\n    \r\n\r\n        if (event.target.scrollHeight - event.target.clientHeight == event.target.scrollTop) {\r\n            console.log('底部');\r\n            this.right_show.scrollTop = this.right_show.scrollHeight - this.right_show.clientHeight;\r\n            return;\r\n        }\r\n        let mdDivHeight = this.right_show.scrollHeight;\r\n        let textAreaHeight = this.left_input.scrollHeight;\r\n        let scaleSize = mdDivHeight / textAreaHeight;\r\n\r\n        if (scaleSize > 1) {\r\n            scaleSize = scaleSize * 0.9;\r\n        }\r\n\r\n        this.right_show.scrollTop = event.target.scrollTop * scaleSize;\r\n    }\r\n\r\n}"],"sourceRoot":""}