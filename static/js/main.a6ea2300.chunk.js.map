{"version":3,"sources":["logo.svg","features/home/Home.js","App.js","reportWebVitals.js","features/task_manage/action.js","features/task_manage/manage_reducer.js","features/store.js","index.js"],"names":["Home","go2Home","props","history","replace","className","onClick","this","to","target","React","Component","ManageHome","loadable","SelfU","Tech","host","window","location","test","axios","defaults","baseURL","console","log","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TYPE_Test","initStatus","manage_reducer","status","action","type","text","store","combineReducers","store1","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,mECMMA,E,4MAiBjBC,QAAQ,WAEJ,EAAKC,MAAMC,QAAQC,QAAQ,M,4CAjB/B,WACI,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIC,QAASC,KAAKN,QAAlB,kBAEA,sBAAKI,UAAU,YAAf,UACI,cAAC,IAAD,CAAMG,GAAG,QAAQH,UAAU,WAA3B,sCACA,cAAC,IAAD,CAAMG,GAAG,UAAUH,UAAU,WAA7B,sCACA,cAAC,IAAD,CAAMG,GAAG,UAAUC,OAAO,SAASJ,UAAU,WAA7C,gD,GAVcK,IAAMC,W,yBCIlCC,EAAaC,aAAS,kBAAM,uDAC5BC,EAAQD,aAAS,kBAAM,iCACvBE,EAAOF,aAAS,kBAAM,iCAGxBG,EAAOC,OAAOC,SAASF,KACjB,cACHG,KAAKH,GAEVI,IAAMC,SAASC,QAAU,GAGzBF,IAAMC,SAASC,QAAS,qBAE1BC,QAAQC,IAAI,MAAMJ,IAAMC,SAASC,SAkBlBG,MAhBf,WACE,OACE,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5B,IACjC,cAAC,IAAD,CAAO0B,KAAK,QAAQC,OAAK,EAACC,UAAWb,IACrC,cAAC,IAAD,CAAOW,KAAK,UAAUC,OAAK,EAACC,UAAWd,IACvC,cAAC,IAAD,CAAOY,KAAK,UAAUE,UAAWhB,UCtB1BiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCJDQ,EAAY,YCCnBC,EAAa,GAaJC,EAZQ,WAAkC,IAAjCC,EAAgC,uDAAvBF,EAAYG,EAAW,uCAEpD,OADAnB,QAAQC,IAAI,eAAekB,EAAOC,MAC1BD,EAAOC,MACX,KAAKL,EACD,OAAO,2BAAKG,GAAZ,IAAoBG,KAAMF,EAAOE,OACrC,QACI,OAAOH,ICHJI,EAJHC,YAAgB,CACxBN,mB,QCMAO,EAASC,YAAYH,GAIzBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOE,EAAjB,SACE,cAAC,EAAD,QAIJK,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.a6ea2300.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import './Home.s';\r\nimport './Home.scss'\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home_main\">\r\n                <h1 onClick={this.go2Home}>Home</h1>\r\n\r\n                <div className=\"home_tabs\">\r\n                    <Link to=\"/tech\" className=\"home_tab\">技术文章</Link>\r\n                    <Link to=\"/self_u\" className=\"home_tab\">个人分享</Link>\r\n                    <Link to=\"/manage\" target=\"_blank\" className=\"home_tab\">管理后台</Link>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    go2Home=()=>{\r\n        // console.log(this.props.history)\r\n        this.props.history.replace(\"/\");\r\n    }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { Link, HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './features/home/Home';\n\nimport loadable from '@loadable/component';\nimport axios from 'axios';\n\n\n\nconst ManageHome = loadable(() => import('./features/task_manage/ManageHome'))\nconst SelfU = loadable(() => import('./features/self_share/SelfU'))\nconst Tech = loadable(() => import('./features/task_tech/Tech'))\n\n\nlet host = window.location.host; \nlet reg = /^localhost+/;\nif(reg.test(host)) {\n  //若本地项目调试使用\n  axios.defaults.baseURL = '';\n} else {\n  //动态请求地址\n  axios.defaults.baseURL =\"http://pv.sohu.com\";\n}\nconsole.log(\"---\"+axios.defaults.baseURL)\n\nfunction App() {\n  return (\n    <Router>\n\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tech\" exact component={Tech} />\n        <Route path=\"/self_u\" exact component={SelfU} />\n        <Route path=\"/manage\" component={ManageHome} />\n\n      </Switch>\n\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\n\r\nexport const TYPE_Test = 'type_test'\r\n\r\n\r\n/**\r\n * \r\n * @param {testAction} text \r\n * @returns \r\n */\r\nexport const actionTest = text => {\r\n    return {\r\n        type: TYPE_Test,\r\n        text\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { TYPE_Test } from \"./action\"\r\n\r\n\r\n\r\nconst initStatus = { }\r\nconst manage_reducer = (status = initStatus, action) => {\r\n    console.log(\"test Action \"+action.type)\r\n    switch (action.type) {\r\n        case TYPE_Test:\r\n            return { ...status, text: action.text }\r\n        default:\r\n            return status\r\n    }\r\n\r\n}\r\n\r\n \r\nexport default manage_reducer\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport manage_reducer from \"./task_manage/manage_reducer\";\r\n\r\n\r\nconst store=combineReducers({\r\n    manage_reducer\r\n})\r\n \r\nexport default store\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore } from 'redux';\nimport store from './features/store';\nimport { Provider } from 'react-redux';\n\n\nlet store1 = createStore(store)\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store1}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}